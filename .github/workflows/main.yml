name: CI-CD-Pipeline-GithubActions-to-AWS-ECS

env:
  AWS_REGION_NAME: "eu-central-1"

on:
  push:
    branches:
      - main

jobs:
  my_ci_part:
    runs-on: ubuntu-latest

    steps:
      - name: Git clone our repo
        uses: actions/checkout@v2

      - name: Check Dockerfile existence
        run: ls Dockerfile
        continue-on-error: true

      - name: Build Docker image Github-Actions
        run: |
          docker build -t my-app:${GITHUB_SHA} .
          docker tag my-app:${GITHUB_SHA} 919766105498.dkr.ecr.eu-central-1.amazonaws.com/my-app:${GITHUB_SHA}
      - name: Configure AWS Credentials for ECR
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AKIA5MJSU7WNHR7IZLPP }}
          aws-secret-access-key: ${{ secrets.U4TJCvK76cH7QHz1+lDsHHTCF/MJiTPH99gH9A+y }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region ${env.AWS_REGION_NAME} | docker login --username AWS --password-stdin 919766105498.dkr.ecr.eu-central-1.amazonaws.com

      - name: Push Docker image to ECR
        run: docker push 919766105498.dkr.ecr.eu-central-1.amazonaws.com/my-app:${GITHUB_SHA}

  my_cd_part:
    runs-on: ubuntu-latest
    needs: [my_ci_part]

    steps:
      - name: Configure AWS Credentials for ECS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AKIA5MJSU7WNHR7IZLPP }}
          aws-secret-access-key: ${{ secrets.U4TJCvK76cH7QHz1+lDsHHTCF/MJiTPH99gH9A+y }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Create or update ECS service
        run: |
          aws ecs update-service --cluster my-cluster --service my-service --force-new-deployment --task-definition my-task-definition:${GITHUB_SHA}
      - name: Print Happy Message for CD finish
        run: echo "CD Pipeline part Finished successfully!"
